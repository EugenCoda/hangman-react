{"version":3,"sources":["components/Header.js","components/Figure.js","components/WrongLetters.js","components/Word.js","components/Notification.js","helpers/helpers.js","components/Popup.js","App.js","index.js"],"names":["Header","Figure","errors","wrongLetters","length","height","width","className","x1","y1","x2","y2","cx","cy","r","WrongLetters","map","letter","i","reduce","prev","curr","Word","selectedWord","correctLetters","split","includes","Notification","showNotification","show","setter","setTimeout","Popup","setPlayable","playAgain","check","word","Set","checkWin","playable","message","revealWordMessage","useEffect","style","display","onClick","words","Math","floor","random","App","useState","setCorrectLetters","setWrongLetters","setShowNotification","handleKeydown","event","key","keyCode","toLowerCase","currentLetters","window","addEventListener","removeEventListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4490ff97.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = () => {\n  return (\n    <div>\n      <h1>Hangman</h1>\n      <p>Find the hidden word - Enter a letter</p>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst Figure = ({ wrongLetters }) => {\n  let errors = wrongLetters.length;\n  return (\n    <svg height=\"250\" width=\"200\" className=\"figure-container\">\n      {/* <!-- Rod --> */}\n      <line x1=\"60\" y1=\"20\" x2=\"140\" y2=\"20\" />\n      <line x1=\"140\" y1=\"20\" x2=\"140\" y2=\"50\" />\n      <line x1=\"60\" y1=\"20\" x2=\"60\" y2=\"230\" />\n      <line x1=\"20\" y1=\"230\" x2=\"100\" y2=\"230\" />\n\n      {/* <!-- Head --> */}\n      {errors > 0 && <circle cx=\"140\" cy=\"70\" r=\"20\" />}\n      {/* <!-- Body --> */}\n      {errors > 1 && <line x1=\"140\" y1=\"90\" x2=\"140\" y2=\"150\" />}\n      {/* <!-- Arms --> */}\n      {errors > 2 && <line x1=\"140\" y1=\"120\" x2=\"120\" y2=\"100\" />}\n      {errors > 3 && <line x1=\"140\" y1=\"120\" x2=\"160\" y2=\"100\" />}\n      {/* <!-- Legs --> */}\n      {errors > 4 && <line x1=\"140\" y1=\"150\" x2=\"120\" y2=\"180\" />}\n      {errors > 5 && <line x1=\"140\" y1=\"150\" x2=\"160\" y2=\"180\" />}\n    </svg>\n  );\n};\n\nexport default Figure;\n","import React from \"react\";\n\nconst WrongLetters = ({ wrongLetters }) => {\n  return (\n    <div className=\"wrong-letters-container\">\n      <div>\n        {wrongLetters.length > 0 && <p>Wrong: </p>}\n        {wrongLetters\n          .map((letter, i) => <span key={i}>{letter}</span>)\n          .reduce(\n            (prev, curr) => (prev === null ? [curr] : [prev, \", \", curr]),\n            null\n          )}\n      </div>\n    </div>\n  );\n};\n\nexport default WrongLetters;\n","import React from \"react\";\n\nconst Word = ({ selectedWord, correctLetters }) => {\n  return (\n    <div className=\"word\">\n      {selectedWord.split(\"\").map((letter, i) => (\n        <span key={i}>{correctLetters.includes(letter) ? letter : \"\"}</span>\n      ))}\n    </div>\n  );\n};\n\nexport default Word;\n","import React from \"react\";\n\nconst Notification = ({ showNotification }) => {\n  return (\n    <div className={`notification-container ${showNotification ? \"show\" : \"\"}`}>\n      You have already entered this letter!\n    </div>\n  );\n};\n\nexport default Notification;\n","export function show(setter) {\n  setter(true);\n  setTimeout(() => {\n    setter(false);\n  }, 2000);\n}\n\nexport function checkWin(selectedWord, wrongLetters, correctLetters) {\n  let word = [...new Set(selectedWord.split(\"\"))];\n  if (correctLetters.length === word.length) {\n    return \"won\";\n  }\n  if (wrongLetters.length === 6) {\n    return \"lost\";\n  }\n}\n","import React, { useEffect } from \"react\";\nimport { checkWin } from \"../helpers/helpers\";\n\nconst Popup = ({\n  selectedWord,\n  wrongLetters,\n  correctLetters,\n  setPlayable,\n  playAgain,\n}) => {\n  let check = checkWin(selectedWord, wrongLetters, correctLetters);\n  let playable = true;\n  let message = \"\";\n  let revealWordMessage = \"\";\n\n  if (check === \"won\") {\n    message = \"You won!\";\n    playable = false;\n  } else if (check === \"lost\") {\n    message = \"You lost!\";\n    revealWordMessage = `...the word was: ${selectedWord}`;\n    playable = false;\n  }\n\n  useEffect(() => {\n    setPlayable(playable);\n  });\n\n  return (\n    <div\n      className=\"popup-container\"\n      style={message !== \"\" ? { display: \"flex\" } : {}}\n    >\n      <h2>{message}</h2>\n      <h3>{revealWordMessage}</h3>\n      <button onClick={playAgain}>Play Again</button>\n    </div>\n  );\n};\n\nexport default Popup;\n","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Figure from \"./components/Figure\";\nimport WrongLetters from \"./components/WrongLetters\";\nimport Word from \"./components/Word\";\nimport Notification from \"./components/Notification\";\nimport Popup from \"./components/Popup\";\nimport { show } from \"./helpers/helpers\";\n\nconst words = [\"mister\", \"smartphone\", \"history\", \"yogurt\", \"element\"];\nlet selectedWord = words[Math.floor(Math.random() * words.length)];\n\nfunction App() {\n  const [playable, setPlayable] = useState(true);\n  const [correctLetters, setCorrectLetters] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n  const [showNotification, setShowNotification] = useState(false);\n\n  useEffect(() => {\n    const handleKeydown = (event) => {\n      const { key, keyCode } = event;\n      if (playable && keyCode >= 65 && keyCode <= 90) {\n        const letter = key.toLowerCase();\n        // Word includes the typed letter\n        if (selectedWord.includes(letter)) {\n          // Letter was not yet added to the correct letters array\n          if (!correctLetters.includes(letter)) {\n            setCorrectLetters((currentLetters) => [...currentLetters, letter]);\n            // Letter was already added to the correct letters array\n          } else {\n            show(setShowNotification);\n          }\n          // Word does not include the typed letter\n        } else {\n          // Letter was not yet added to the wrong letters array\n          if (!wrongLetters.includes(letter)) {\n            setWrongLetters((currentLetters) => [...currentLetters, letter]);\n            // Letter was already added to the wrong letters array\n          } else {\n            show(setShowNotification);\n          }\n        }\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeydown);\n\n    return () => window.removeEventListener(\"keydown\", handleKeydown);\n  }, [playable, correctLetters, wrongLetters]);\n\n  function playAgain() {\n    setPlayable(true);\n    setCorrectLetters([]);\n    setWrongLetters([]);\n    selectedWord = words[Math.floor(Math.random() * words.length)];\n  }\n\n  return (\n    <>\n      <Header />\n      <div className=\"game-container\">\n        <Figure wrongLetters={wrongLetters} />\n        <WrongLetters wrongLetters={wrongLetters} />\n        <Word selectedWord={selectedWord} correctLetters={correctLetters} />\n      </div>\n      <Notification showNotification={showNotification} />\n      <Popup\n        selectedWord={selectedWord}\n        correctLetters={correctLetters}\n        wrongLetters={wrongLetters}\n        setPlayable={setPlayable}\n        playAgain={playAgain}\n      />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}